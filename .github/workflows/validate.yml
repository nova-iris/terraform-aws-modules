name: Validate

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        terraform-version: ['1.0', '1.5', 'latest']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ matrix.terraform-version }}
        
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
      
    - name: Terraform Init
      run: terraform init -upgrade
      continue-on-error: true
      
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      
    - name: Comment PR
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ Terraform validation failed. Please check your code formatting and syntax.'
          })
          
    - name: Upload Terraform validation results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: terraform-validation-${{ matrix.terraform-version }}
        path: |
          .terraform/
          *.tfstate*

  validate-examples:
    runs-on: ubuntu-latest
    needs: validate
    
    strategy:
      matrix:
        module: [vpc, ec2, ecs, lambda, s3]
        example: [simple, advanced]
        exclude:
          - module: ec2
            example: advanced
          - module: ecs
            example: advanced
          - module: lambda
            example: advanced
          - module: s3
            example: advanced
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      
    - name: Check if example exists
      id: check_example
      run: |
        if [ -d "modules/${{ matrix.module }}/examples/${{ matrix.example }}" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Terraform Init
      if: steps.check_example.outputs.exists == 'true'
      working-directory: modules/${{ matrix.module }}/examples/${{ matrix.example }}
      run: terraform init -upgrade
      
    - name: Terraform Plan
      if: steps.check_example.outputs.exists == 'true'
      working-directory: modules/${{ matrix.module }}/examples/${{ matrix.example }}
      run: terraform plan -no-color
      continue-on-error: true
      
    - name: Upload example plan
      if: steps.check_example.outputs.exists == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: plan-${{ matrix.module }}-${{ matrix.example }}
        path: modules/${{ matrix.module }}/examples/${{ matrix.example }}/plan.txt